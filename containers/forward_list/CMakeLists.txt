function(escape_name OUTPUT INPUT)
  string(REPLACE "-" "" LOCALVAR ${INPUT})
  string(REPLACE "." "" LOCALVAR ${LOCALVAR})
  string(REPLACE "_" "" LOCALVAR ${LOCALVAR})
  set(${OUTPUT} ${LOCALVAR} PARENT_SCOPE)
endfunction()

function(build_exec_prefix OUTPUT_PREFIX OUTPUT_DIR EXEC_SRC_FILE)
  get_filename_component(EXEC_SRC_FILE_WE ${EXEC_SRC_FILE} NAME_WE)
  if (EXEC_SRC_FILE_WE STREQUAL "main")
    set(EXEC_PREFIX "")
    set(EXEC_OUTPUTDIR "test")
  else()
    string(REPLACE "main_" "" EXEC_PREFIX ${EXEC_SRC_FILE_WE})
    escape_name(EXEC_PREFIX ${EXEC_PREFIX})
    set(EXEC_OUTPUTDIR ${EXEC_PREFIX})
    set(EXEC_PREFIX ${EXEC_PREFIX}.)
  endif()
  set(${OUTPUT_PREFIX} ${EXEC_PREFIX} PARENT_SCOPE)
  set(${OUTPUT_DIR} ${EXEC_OUTPUTDIR} PARENT_SCOPE)
endfunction()

function(build_exec_name OUTPUT_TARGETNAME OUTPUT_TESTNAME EXEC_NAME PREFIX SRC_NAME)
  escape_name(TEST_NAME_START "${EXEC_NAME}")
  get_filename_component(SRC_NAME_WE ${SRC_NAME} NAME_WE)
	if (SRC_NAME_WE STREQUAL "implem")
		set(TARGET_NAME "${MEASURE_PREFIX}${EXEC_NAME}")
		set(CODE_TEST_NAME ${TEST_NAME_START})
	else()
		string(REPLACE "implem_" "" SRC_SUFFIX ${SRC_NAME_WE})
		escape_name(SRC_SUFFIX ${SRC_SUFFIX})
		set(TARGET_NAME "${MEASURE_PREFIX}${EXEC_NAME}.${SRC_SUFFIX}")
		set(CODE_TEST_NAME ${TEST_NAME_START}_${SRC_SUFFIX})
	endif()
  set(${OUTPUT_TARGETNAME} ${TARGET_NAME} PARENT_SCOPE)
  set(${OUTPUT_TESTNAME} ${CODE_TEST_NAME} PARENT_SCOPE)
endfunction()

function(build_exec EXEC_NAME EXEC_SRC_FILE IMPLEM_SRC_FILE)
  message(STATUS "-- build_exec(${EXEC_NAME}, ${EXEC_SRC_FILE}, ${IMPLEM_SRC_FILE})")
  build_exec_prefix(EXEC_PREFIX EXEC_OUTPUTDIR "${EXEC_SRC_FILE}")
  build_exec_name(TARGET_NAME CODE_TEST_NAME "${EXEC_NAME}" "${EXEC_PREFIX}" "${IMPLEM_SRC_FILE}")
  message(STATUS "-- Target name: ${TARGET_NAME} (for test: ${CODE_TEST_NAME})")
  add_executable(${TARGET_NAME} ${IMPLEM_SRC_FILE} ${EXEC_SRC_FILE})
  if (MSVC)
    target_compile_options(${TARGET_NAME} PRIVATE /DTEST_NAME=${CODE_TEST_NAME})
  else()
    target_compile_options(${TARGET_NAME} PRIVATE -DTEST_NAME=${CODE_TEST_NAME})
  endif()
  target_link_libraries(${TARGET_NAME} ${GTEST_BOTH_LIBRARIES} rapidcheck)
  set_target_properties(${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${EXEC_OUTPUTDIR})
  if (${EXEC_OUTPUTDIR} MATCHES "test")
    add_test(NAME ${TARGET_NAME} COMMAND ${TARGET_NAME})
  endif()
endfunction()

file(GLOB TEST_SRC_FILES implem*.cpp)
file(GLOB MEASURE_SRC_FILES main.cpp main_*.cpp)

message(STATUS "Scanning: ${CMAKE_CURRENT_SOURCE_DIR}")
get_filename_component(EXEC_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)
#message(STATUS "Owner name: ${EXEC_NAME}")

foreach(MEASURE_NAME ${MEASURE_SRC_FILES})
  foreach(SRC_NAME ${TEST_SRC_FILES})
    build_exec("${EXEC_NAME}" "${MEASURE_NAME}" "${SRC_NAME}")
  endforeach()
endforeach()

